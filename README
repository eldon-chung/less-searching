Just a personal project where I try to implement Boyer-Moore with the bad character and good suffix rule off of a clone of the less source code. 

Disclaimer: As this is a personal project don't expect this to be anywhere near the actual official release nor source. This version is not intended
for any form of distribution. All rights belong to their respect owners and I really don't own anything here.

I've also included a really basic set of instructions on how to get my version to build (which is mostly based off the original instructions with an addditional step).
(Only with Works-On-My-Machine certification)

=======================================================================
INSTALLATION (Unix & Linux systems only):

1. Move the distributed source to its own directory and unpack it,
   if you have not already done so.  

2. If you are building from a clone of a git repository,
   type "make -f Makefile.aut distfiles".

3. Type "sh configure".
   This will generate a Makefile and a defines.h.
   Warning: if you have a GNU sed, make sure it is version 2.05 or later.

4. (My own step): overwrite the contents of funcs.h with the contents of my_funcs.h

5. (My own step): overwrite the contents of Makefile with the contents of MyMakefile

6. Type "make".

7. If the make succeeds, it will generate the programs "less",
   "lesskey" and "lessecho" in your current directory.  Have fun playing with the search feature on "less".
=======================================================================

TODO:
1. Gotta add some benchmarks. Maybe run perf. Compare against both their regex as well as their brute force algorithm.
